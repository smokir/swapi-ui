{"version":3,"file":"static/js/76.b1c11e1b.chunk.js","mappings":"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","sources":["components/CardDetails/styled.ts","components/CardDetails/CardDetails.tsx","screens/Details/styled.ts","screens/Details/Details.tsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Typography } from '@mui/material';\nimport { theme } from 'styles/theme';\n\nexport const DetailRow = styled(Typography)`\n  &:not(:last-child) {\n    margin: ${theme.spacing(1)} 0;\n  }\n`;\n\nexport const Bold = styled.span`\n  font-weight: bold;\n`;\n","import { Bold, DetailRow } from './styled';\n\nexport const CardDetails = ({ details }: { details: Record<string, string | string[]> }) => (\n  <>\n    {Object.entries(details).map(([key, value]) => (\n      <DetailRow key={key} variant='body2' color='text.secondary' title={value.toString()}>\n        <Bold>{key}</Bold>: {value}\n      </DetailRow>\n    ))}\n  </>\n);\n","import styled from '@emotion/styled';\nimport { Paper } from '@mui/material';\n\nimport { theme } from 'styles/theme';\n\nexport const Wrapper = styled(Paper)`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  padding: ${theme.spacing(3)};\n  row-gap: ${theme.spacing(2)};\n`;\n\nexport const CardHeader = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n","import { ChangeEvent, useEffect, useState } from 'react';\nimport { useParams, Link, useNavigate } from 'react-router-dom';\nimport {\n  Button,\n  Card,\n  CardContent,\n  CircularProgress,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  IconButton,\n  Link as MUILink,\n  TextField,\n  Typography,\n} from '@mui/material';\nimport EditIcon from '@mui/icons-material/Edit';\n\nimport { useAppDispatch, useAppSelector } from 'store';\nimport {\n  editResourceTitle,\n  fetchResource,\n  isResourceType,\n  selectResourceForDetails,\n  selectResourcesMeta,\n  setResourceType,\n} from 'store/modules/resources';\n\nimport { noop } from 'utils';\n\nimport { CardDetails } from 'components';\n\nimport { Wrapper, CardHeader } from './styled';\n\nexport const Details = () => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n\n  const [opened, setOpened] = useState(false);\n\n  const onOpen = () => {\n    setNewTitle(resource?.title || '');\n    setOpened(true);\n  };\n\n  const onClose = () => {\n    // TODO: refactor\n    // eslint-disable-next-line no-restricted-globals\n    if (newTitle === resource?.title || confirm('You have unsaved changes. Close anyway?')) {\n      setOpened(false);\n    }\n  };\n\n  const onSave = () => {\n    dispatch(editResourceTitle({ id: resourceId!, title: newTitle }));\n    setOpened(false);\n  };\n\n  const { loading, error } = useAppSelector(selectResourcesMeta);\n\n  const { resourceType, resourceId } = useParams();\n\n  const resource = useAppSelector(state =>\n    resourceId ? selectResourceForDetails(state, resourceId) : undefined,\n  );\n\n  const [newTitle, setNewTitle] = useState('');\n\n  const onChangeNewTitle = (e: ChangeEvent<HTMLInputElement>) => setNewTitle(e.target.value);\n\n  useEffect(() => {\n    if (!resource) {\n      if (resourceId && resourceType && isResourceType(resourceType)) {\n        dispatch(setResourceType(resourceType));\n        dispatch(fetchResource({ resourceType, resourceId })).catch(noop);\n      } else {\n        console.error(`Incorrect path parameters: ${resourceType} and ${resourceId}`);\n        navigate('/404');\n      }\n    }\n  }, [dispatch, navigate, resource, resourceId, resourceType]);\n\n  if (loading) {\n    return <CircularProgress />;\n  }\n\n  return (\n    <Wrapper elevation={1}>\n      {resource && (\n        <>\n          <Card elevation={8}>\n            <CardContent>\n              <CardHeader>\n                <Typography variant='h5'>{resource.title}</Typography>\n\n                <IconButton\n                  color='primary'\n                  aria-label='edit title'\n                  component='span'\n                  onClick={onOpen}\n                  size='small'\n                >\n                  <EditIcon />\n                </IconButton>\n              </CardHeader>\n\n              <CardDetails details={resource.details} />\n            </CardContent>\n          </Card>\n\n          <Dialog open={opened} onClose={onClose}>\n            <DialogTitle>Change title</DialogTitle>\n\n            <DialogContent>\n              <DialogContentText>\n                In order to change the title please enter a new one and then press the Save button\n              </DialogContentText>\n\n              <TextField\n                autoFocus\n                margin='dense'\n                label='New title'\n                fullWidth\n                value={newTitle}\n                onChange={onChangeNewTitle}\n                variant='standard'\n              />\n            </DialogContent>\n\n            <DialogActions>\n              <Button onClick={onClose}>Cancel</Button>\n\n              <Button onClick={onSave}>Save</Button>\n            </DialogActions>\n          </Dialog>\n        </>\n      )}\n\n      {error && (\n        <Typography variant='h5' color='text.secondary'>\n          Error: {error}\n        </Typography>\n      )}\n\n      <MUILink component={Link} to='/'>\n        Go back\n      </MUILink>\n    </Wrapper>\n  );\n};\n"],"names":["DetailRow","styled","Typography","theme","Bold","CardDetails","details","Object","entries","map","key","value","variant","color","title","toString","Wrapper","Paper","CardHeader","Details","dispatch","useAppDispatch","navigate","useNavigate","useState","opened","setOpened","onClose","newTitle","resource","confirm","useAppSelector","selectResourcesMeta","loading","error","useParams","resourceType","resourceId","state","selectResourceForDetails","undefined","setNewTitle","useEffect","isResourceType","setResourceType","fetchResource","catch","noop","console","CircularProgress","elevation","Card","CardContent","IconButton","component","onClick","size","Edit","Dialog","open","DialogTitle","DialogContent","DialogContentText","TextField","autoFocus","margin","label","fullWidth","onChange","e","target","DialogActions","Button","editResourceTitle","id","Link","to"],"sourceRoot":""}